<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-05-15T18:20:03+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">LeeJellan</title><subtitle>안녕하세요!🙂 IT,여행,기타 등 기록을 남기기위한 블로그 입니다 !</subtitle><author><name>LEE JAEHYEOK</name></author><entry><title type="html">[Programmers] 특정 기간동안 대여 가능한 자동차들의 대여비용 구하기 (MySQL)</title><link href="http://localhost:4000/sql/2023/05/15/sql-rentcost.html" rel="alternate" type="text/html" title="[Programmers] 특정 기간동안 대여 가능한 자동차들의 대여비용 구하기 (MySQL)" /><published>2023-05-15T00:00:00+09:00</published><updated>2023-05-15T00:00:00+09:00</updated><id>http://localhost:4000/sql/2023/05/15/sql-rentcost</id><content type="html" xml:base="http://localhost:4000/sql/2023/05/15/sql-rentcost.html"><![CDATA[<h2 id="-문제--특정-기간동안-대여-가능한-자동차들의-대여비용-구하기">📌 문제 : <a href="https://school.programmers.co.kr/learn/courses/30/lessons/157339">특정 기간동안 대여 가능한 자동차들의 대여비용 구하기</a></h2>

<h3 id="-문제-설명">📖 문제 설명</h3>

<p>다음은 어느 자동차 대여 회사에서 대여 중인 자동차들의 정보를 담은 <code>CAR_RENTAL_COMPANY_CAR</code> 테이블과 자동차 대여 기록 정보를 담은 <code>CAR_RENTAL_COMPANY_RENTAL_HISTORY</code> 테이블과 자동차 종류 별 대여 기간 종류 별 할인 정책 정보를 담은 <code>CAR_RENTAL_COMPANY_DISCOUNT_PLAN</code> 테이블 입니다.</p>

<p><code>CAR_RENTAL_COMPANY_CAR</code> 테이블은 아래와 같은 구조로 되어있으며, <code>CAR_ID</code>, <code>CAR_TYPE</code>, <code>DAILY_FEE</code>, <code>OPTIONS</code> 는 각각 자동차 ID, 자동차 종류, 일일 대여 요금(원), 자동차 옵션 리스트를 나타냅니다.</p>
<table class="table">
        <thead><tr>
<th>Column name</th>
<th>Type</th>
<th>Nullable</th>
</tr>
</thead>
        <tbody><tr>
<td>CAR_ID</td>
<td>INTEGER</td>
<td>FALSE</td>
</tr>
<tr>
<td>CAR_TYPE</td>
<td>VARCHAR(255)</td>
<td>FALSE</td>
</tr>
<tr>
<td>DAILY_FEE</td>
<td>INTEGER</td>
<td>FALSE</td>
</tr>
<tr>
<td>OPTIONS</td>
<td>VARCHAR(255)</td>
<td>FALSE</td>
</tr>
</tbody>
      </table>
<p>자동차 종류는 '세단', 'SUV', '승합차', '트럭', '리무진' 이 있습니다. 자동차 옵션 리스트는 콤마(',')로 구분된 키워드 리스트(예: ''열선시트,스마트키,주차감지센서'')로 되어있으며, 키워드 종류는 '주차감지센서', '스마트키', '네비게이션', '통풍시트', '열선시트', '후방카메라', '가죽시트' 가 있습니다.</p>

<p><code>CAR_RENTAL_COMPANY_RENTAL_HISTORY</code> 테이블은 아래와 같은 구조로 되어있으며, <code>HISTORY_ID</code>, <code>CAR_ID</code>, <code>START_DATE</code>, <code>END_DATE</code> 는 각각 자동차 대여 기록 ID, 자동차 ID, 대여 시작일, 대여 종료일을 나타냅니다.</p>
<table class="table">
        <thead><tr>
<th>Column name</th>
<th>Type</th>
<th>Nullable</th>
</tr>
</thead>
        <tbody><tr>
<td>HISTORY_ID</td>
<td>INTEGER</td>
<td>FALSE</td>
</tr>
<tr>
<td>CAR_ID</td>
<td>INTEGER</td>
<td>FALSE</td>
</tr>
<tr>
<td>START_DATE</td>
<td>DATE</td>
<td>FALSE</td>
</tr>
<tr>
<td>END_DATE</td>
<td>DATE</td>
<td>FALSE</td>
</tr>
</tbody>
      </table>
<p><code>CAR_RENTAL_COMPANY_DISCOUNT_PLAN</code> 테이블은 아래와 같은 구조로 되어있으며, <code>PLAN_ID</code>, <code>CAR_TYPE</code>, <code>DURATION_TYPE</code>, <code>DISCOUNT_RATE</code> 는 각각 요금 할인 정책 ID, 자동차 종류, 대여 기간 종류, 할인율(%)을 나타냅니다.</p>
<table class="table">
        <thead><tr>
<th>Column name</th>
<th>Type</th>
<th>Nullable</th>
</tr>
</thead>
        <tbody><tr>
<td>PLAN_ID</td>
<td>INTEGER</td>
<td>FALSE</td>
</tr>
<tr>
<td>CAR_TYPE</td>
<td>VARCHAR(255)</td>
<td>FALSE</td>
</tr>
<tr>
<td>DURATION_TYPE</td>
<td>VARCHAR(255)</td>
<td>FALSE</td>
</tr>
<tr>
<td>DISCOUNT_RATE</td>
<td>INTEGER</td>
<td>FALSE</td>
</tr>
</tbody>
      </table>
<p>할인율이 적용되는 대여 기간 종류로는 '7일 이상' (대여 기간이 7일 이상 30일 미만인 경우), '30일 이상' (대여 기간이 30일 이상 90일 미만인 경우), '90일 이상' (대여 기간이 90일 이상인 경우) 이 있습니다. 대여 기간이 7일 미만인 경우 할인정책이 없습니다.</p>

<hr />

<h5>문제</h5>

<p><code>CAR_RENTAL_COMPANY_CAR</code> 테이블과 <code>CAR_RENTAL_COMPANY_RENTAL_HISTORY</code> 테이블과 <code>CAR_RENTAL_COMPANY_DISCOUNT_PLAN</code> 테이블에서 자동차 종류가 '세단' 또는 'SUV' 인 자동차 중 2022년 11월 1일부터 2022년 11월 30일까지 대여 가능하고 30일간의 대여 금액이 50만원 이상 200만원 미만인 자동차에 대해서 자동차 ID, 자동차 종류, 대여 금액(컬럼명: <code>FEE</code>) 리스트를 출력하는 SQL문을 작성해주세요. 결과는 대여 금액을 기준으로 내림차순 정렬하고, 대여 금액이 같은 경우 자동차 종류를 기준으로 오름차순 정렬, 자동차 종류까지 같은 경우 자동차 ID를 기준으로 내림차순 정렬해주세요.</p>

<hr />

<h5>예시</h5>

<p>예를 들어 <code>CAR_RENTAL_COMPANY_CAR</code> 테이블과 <code>CAR_RENTAL_COMPANY_RENTAL_HISTORY</code> 테이블과 <code>CAR_RENTAL_COMPANY_DISCOUNT_PLAN</code> 테이블이 다음과 같다면</p>
<table class="table">
        <thead><tr>
<th>CAR_ID</th>
<th>CAR_TYPE</th>
<th>DAILY_FEE</th>
<th>OPTIONS</th>
</tr>
</thead>
        <tbody><tr>
<td>1</td>
<td>SUV</td>
<td>25000</td>
<td>가죽시트,열선시트,후방카메라</td>
</tr>
<tr>
<td>2</td>
<td>세단</td>
<td>14000</td>
<td>스마트키,네비게이션,열선시트</td>
</tr>
<tr>
<td>3</td>
<td>트럭</td>
<td>32000</td>
<td>주차감지센서,후방카메라,가죽시트</td>
</tr>
<tr>
<td>4</td>
<td>세단</td>
<td>12000</td>
<td>열선시트,후방카메라</td>
</tr>
<tr>
<td>5</td>
<td>세단</td>
<td>22000</td>
<td>스마트키,주차감지센서</td>
</tr>
</tbody>
      </table>
<table class="table">
        <thead><tr>
<th>HISTORY_ID</th>
<th>CAR_ID</th>
<th>START_DATE</th>
<th>END_DATE</th>
</tr>
</thead>
        <tbody><tr>
<td>1</td>
<td>1</td>
<td>2022-08-27</td>
<td>2022-09-02</td>
</tr>
<tr>
<td>2</td>
<td>1</td>
<td>2022-10-03</td>
<td>2022-10-04</td>
</tr>
<tr>
<td>3</td>
<td>2</td>
<td>2022-10-05</td>
<td>2022-10-20</td>
</tr>
<tr>
<td>4</td>
<td>2</td>
<td>2022-10-10</td>
<td>2022-11-12</td>
</tr>
<tr>
<td>5</td>
<td>3</td>
<td>2022-10-16</td>
<td>2022-10-17</td>
</tr>
</tbody>
      </table>
<table class="table">
        <thead><tr>
<th>PLAN_ID</th>
<th>CAR_TYPE</th>
<th>DURATION_TYPE</th>
<th>DISCOUNT_RATE</th>
</tr>
</thead>
        <tbody><tr>
<td>1</td>
<td>트럭</td>
<td>7일 이상</td>
<td>5%</td>
</tr>
<tr>
<td>2</td>
<td>트럭</td>
<td>30일 이상</td>
<td>7%</td>
</tr>
<tr>
<td>3</td>
<td>트럭</td>
<td>90일 이상</td>
<td>10%</td>
</tr>
<tr>
<td>4</td>
<td>세단</td>
<td>7일 이상</td>
<td>5%</td>
</tr>
<tr>
<td>5</td>
<td>세단</td>
<td>30일 이상</td>
<td>10%</td>
</tr>
<tr>
<td>6</td>
<td>세단</td>
<td>90일 이상</td>
<td>15%</td>
</tr>
<tr>
<td>7</td>
<td>SUV</td>
<td>7일 이상</td>
<td>3%</td>
</tr>
<tr>
<td>8</td>
<td>SUV</td>
<td>30일 이상</td>
<td>8%</td>
</tr>
<tr>
<td>9</td>
<td>SUV</td>
<td>90일 이상</td>
<td>12%</td>
</tr>
</tbody>
      </table>
<p>자동차 종류가 '세단' 또는 'SUV' 인 자동차 중 2022년 11월 1일 부터 2022년 11월 30일까지 대여가능한 자동차는 자동차 ID가 1, 4, 5인 자동차입니다.</p>

<p>일일 대여 요금에 자동차 종류 별 대여기간이 30일 이상인 경우의 할인율을 적용하여 30일간의 대여 금액을 구하면,</p>

<ul>
<li>자동차 ID가 1인 경우, 일일 대여 금액 25,000원에서 8% 할인율을 적용하고 30일을 곱하면 총 대여 금액은 690,000원</li>
<li>자동차 ID가 4인 경우, 일일 대여 금액 12,000원에서 10% 할인율을 적용하고 30일을 곱하면 총 대여 금액은 324,000원</li>
<li>자동차 ID가 5인 경우, 일일 대여 금액 22,000원에서 10% 할인율을 적용하고 30일을 곱하면 총 대여 금액은 621,000원이고, 대여 금액이 50만원 이상 200만원 미만인 경우에 대해서 대여 금액을 기준으로 내림차순, 자동차 종류를 기준으로 오름차순 및 자동차 ID를 기준으로 내림차순 정렬하면 다음과 같아야 합니다.</li>
</ul>
<table class="table">
        <thead><tr>
<th>CAR_ID</th>
<th>CAR_TYPE</th>
<th>FEE</th>
</tr>
</thead>
        <tbody><tr>
<td>5</td>
<td>세단</td>
<td>690000</td>
</tr>
<tr>
<td>1</td>
<td>SUV</td>
<td>621000</td>
</tr>
</tbody>
      </table>
<hr />

<h5>주의사항</h5>

<p><code>FEE</code>의 경우 예시처럼 정수부분만 출력되어야 합니다.</p>

<blockquote>
  <p>출처: 프로그래머스 코딩 테스트 연습, https://programmers.co.kr/learn/challenges</p>
</blockquote>

<hr />

<h2 id="-문제-풀이">🗝 문제 풀이</h2>

<ol>
  <li>LEFT JOIN을 통한 CAR 테이블과 DISCOUNT PLAN 테이블을 조인한다.</li>
  <li>WHERE절을 이용한 조건문 필터링 한다 <br />
 1). 세단, SUV만 필터링<br />
 2). START_DATE, END_DATE 날짜가 2022-11-01 ~ 2022-11-30 안에 존재하면 필터링<br />
 3). 30일 이상으로된 할인정책을 사용하기위해 필터링</li>
  <li>HAVING절을 이용해 계산완료된 FEE값에 50만원이상 ~ 200만원 미만 범위로 필터링한다.</li>
  <li>마지막으로 FEE를 내림차순 같으면 종류를 오름차순으로 같으면 ID를 내림차순으로 정렬한다.</li>
</ol>

<pre><code class="language-roomsql">SELECT c.CAR_ID,
    c.CAR_TYPE,
    (c.DAILY_FEE - ROUND(c.DAILY_FEE / 100 * p.DISCOUNT_RATE)) * 30 AS FEE
FROM CAR_RENTAL_COMPANY_CAR c
LEFT JOIN CAR_RENTAL_COMPANY_DISCOUNT_PLAN p
    ON c.CAR_TYPE = p.CAR_TYPE 
WHERE c.CAR_TYPE IN ('세단','SUV') 
    AND c.CAR_ID NOT IN (
        SELECT CAR_ID
        FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
        WHERE END_DATE &gt;= '2022-11-01' AND START_DATE &lt;= '2022-11-30'
    )
    AND p.DURATION_TYPE = '30일 이상'
HAVING FEE &gt;= 500000 AND FEE &lt; 2000000
ORDER BY FEE DESC, c.CAR_TYPE ASC, c.CAR_ID DESC;
</code></pre>

<p>풀면서 느낀점은 <code class="language-plaintext highlighter-rouge">CAR_RENTAL_COMPANY_RENTAL_HISTORY</code>를 조인해서 풀려고 했지만 <br />
사실상 날짜를 확인하여 필터링만하면 되기때문에 JOIN을 하지 않아도 되었다는 점.</p>

<p>서브쿼리를 사용한다는 발상이 자꾸 안떠오르는게 문제풀이하는데 조금 시간을 더 소요하는 것 같다. <br />
또한 WHERE절과 HAVING절의 차이를 이번 문제로 이해가 좀더 된 것 같다.</p>

<p><br /></p>]]></content><author><name>LEE JAEHYEOK</name></author><category term="SQL" /><category term="SQL" /><category term="Programmers" /><summary type="html"><![CDATA[📌 문제 : 특정 기간동안 대여 가능한 자동차들의 대여비용 구하기]]></summary></entry><entry><title type="html">Code Deploy 에러해결 : An error occurred (AccessDeniedException) when calling the CreateDeployment operation</title><link href="http://localhost:4000/aws/2023/05/15/aws-codedeploy.html" rel="alternate" type="text/html" title="Code Deploy 에러해결 : An error occurred (AccessDeniedException) when calling the CreateDeployment operation" /><published>2023-05-15T00:00:00+09:00</published><updated>2023-05-15T00:00:00+09:00</updated><id>http://localhost:4000/aws/2023/05/15/aws-codedeploy</id><content type="html" xml:base="http://localhost:4000/aws/2023/05/15/aws-codedeploy.html"><![CDATA[<h3 id="-에러-상황">🐞 에러 상황</h3>

<p>Git Actions를 이용한 CI/CD 구성중 만난 에러다. <br />
에러 내용은 아래와 같다.</p>

<p><img src="https://github.com/MyCatlikesChuru/MyCatlikesChuru.github.io/assets/95069395/31ea0235-3684-45f4-a9c1-ddcbe7ee9c4a" alt="image" class="align-left" style="max-width: 100%" /></p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Run aws deploy create-deployment --application-name *** --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name *** --s3-location bucket=***,bundleType=zip,key=travel-with-me-build.zip

An error occurred (AccessDeniedException) when calling the CreateDeployment operation: User: arn:aws:iam::***:user/s3-user is not authorized to perform: codedeploy:CreateDeployment on resource: arn:aws:codedeploy:ap-northeast-2:***:deploymentgroup:***/*** because no identity-based policy allows the codedeploy:CreateDeployment action
Error: Process completed with exit code 254.
</code></pre></div></div>

<p>에러 내용으로만 보았을때는 내가 생성한 사용자 IAM <code class="language-plaintext highlighter-rouge">s3-user</code>에 권한이 없어서 동작이 안되는 모습이다.  <br />
(참고로 s3-user는 내가 생성한 IAM의 이름이다.)</p>

<p><code class="language-plaintext highlighter-rouge">AmazonEC2RoleforAWSCodeDeploy</code>과 <code class="language-plaintext highlighter-rouge">AWSCodeDeployRole</code> 권한 정책이 추가되어있는데 <br />
Git Actions 실행시 왜 위와 같은 에러가 발생하는걸까?</p>

<p>몇시간의 삽질 끝에 필자가 해결했던 방법을 올려본다.</p>

<p><br /></p>

<h3 id="-해결-방법">📌 해결 방법</h3>

<p>우선 현재 내가 구성한 CI/CD 구조는</p>

<p>GitActions -&gt; S3 -&gt; Code Deploy -&gt; EC2로 빌드된 파일을 <br />
알집으로 전송하고 해당 알집파일을 EC2에서 다운받고 실행시키는 구조이다.</p>

<p>여기서 문제가 되는 부분은 S3까지는 정상적으로 알집파일이 전송된다. <br />
하지만 Code Deploy에서 S3의 알집파일을 EC2로 전송해야하는데  <br />
위와 같은 권한이 없는 에러가 발생한 것이다.</p>

<p>우선 내가 작성한 <code class="language-plaintext highlighter-rouge">gradle.yml</code> 파일을 공유해본다.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">name</span><span class="pi">:</span> <span class="s">Java CI with Gradle</span>

<span class="na">on</span><span class="pi">:</span>
  <span class="na">push</span><span class="pi">:</span>
    <span class="na">branches</span><span class="pi">:</span> <span class="pi">[</span> <span class="s2">"</span><span class="s">main"</span> <span class="pi">]</span>
    <span class="na">paths</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">travel-with-me/**</span> <span class="c1"># 해당 폴더 변경 감지시</span>
      <span class="pi">-</span> <span class="s">.github/**</span> <span class="c1"># github 하위 변경 감지시</span>
      
<span class="na">permissions</span><span class="pi">:</span>
  <span class="na">contents</span><span class="pi">:</span> <span class="s">read</span>

<span class="na">jobs</span><span class="pi">:</span>
  <span class="na">build</span><span class="pi">:</span>

    <span class="na">runs-on</span><span class="pi">:</span> <span class="s">ubuntu-latest</span>
    
    <span class="na">defaults</span><span class="pi">:</span>
      <span class="na">run</span><span class="pi">:</span>
        <span class="na">working-directory</span><span class="pi">:</span> <span class="s">./travel-with-me</span> <span class="c1">#폴더 경로 추가</span>

    <span class="na">steps</span><span class="pi">:</span>
      <span class="c1"># submodule을 사용하기 위한 토큰 추가 </span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Checkout</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/checkout@v3</span>
        <span class="na">with</span><span class="pi">:</span>
          <span class="na">token</span><span class="pi">:</span> <span class="s">$</span>
          <span class="na">submodules</span><span class="pi">:</span> <span class="no">true</span>

      <span class="pi">-</span> <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/checkout@v3</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Set up JDK </span><span class="m">11</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/setup-java@v3</span>
        <span class="na">with</span><span class="pi">:</span>
          <span class="na">java-version</span><span class="pi">:</span> <span class="s1">'</span><span class="s">11'</span>
          <span class="na">distribution</span><span class="pi">:</span> <span class="s1">'</span><span class="s">temurin'</span>

      <span class="c1"># ~/gradlew' is not executable. 문제해결</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Add permission</span>
        <span class="na">run</span><span class="pi">:</span> <span class="s">chmod +x ./gradlew</span>

      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Build with Gradle</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1</span>
        <span class="na">with</span><span class="pi">:</span>
          <span class="na">arguments</span><span class="pi">:</span> <span class="s">build</span>
          <span class="na">build-root-directory</span><span class="pi">:</span> <span class="s">./travel-with-me</span> <span class="c1">#폴더 경로 추가</span>

      <span class="c1"># build 후 압축하는 과정</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Make zip file</span>
        <span class="na">run</span><span class="pi">:</span> <span class="s">zip -r ./travel-with-me-build.zip .</span>
        <span class="na">shell</span><span class="pi">:</span> <span class="s">bash</span>

      <span class="c1"># AWS 사용정보 입력</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Configure AWS credentials</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">aws-actions/configure-aws-credentials@v1</span>
        <span class="na">with</span><span class="pi">:</span>
          <span class="na">aws-access-key-id</span><span class="pi">:</span> <span class="s">$</span> <span class="c1"># IAM 권한 만들때 만든 엑세스키</span>
          <span class="na">aws-secret-access-key</span><span class="pi">:</span> <span class="s">$</span> <span class="c1"># IAM 권한 만들때 만든 시크릿키</span>
          <span class="na">aws-region</span><span class="pi">:</span> <span class="s">ap-northeast-2</span> <span class="c1"># 서울리전</span>

      <span class="c1"># 압축파일 AWS S3 버킷에 업로드(전달)</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Upload to S3</span>
        <span class="na">run</span><span class="pi">:</span> <span class="s">aws s3 cp --region ap-northeast-2 ./travel-with-me-build.zip s3://$/travel-with-me-build.zip</span>

      <span class="c1"># AWS Code Deploy 설정 및 실행</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Code Deploy</span>
        <span class="na">run</span><span class="pi">:</span> <span class="pi">&gt;</span>
          <span class="s">aws deploy create-deployment --application-name $</span>
          <span class="s">--deployment-config-name CodeDeployDefault.AllAtOnce</span>
          <span class="s">--deployment-group-name $</span>
          <span class="s">--s3-location bucket=$,bundleType=zip,key=travel-with-me-build.zip</span>
</code></pre></div></div>

<p>중요한 정보들은 Github Secret으로 감추어두었으니 참고부탁드린다.</p>

<p>여기서 이제 궁극적으로 해결한 방법을 적어보자면 <br />
<code class="language-plaintext highlighter-rouge">AWS</code> -&gt; <code class="language-plaintext highlighter-rouge">IAM</code> -&gt; <code class="language-plaintext highlighter-rouge">사용자</code> -&gt; <code class="language-plaintext highlighter-rouge">내가 만든 사용자</code> -&gt; <code class="language-plaintext highlighter-rouge">권한</code> <br />
까지 이동을하면 아래와 같은 권한 정책을 설정할 수 있는 화면이 나온다.<br />
<strong><em>(당연하게도 IAM 계정 만드는 것이 선행되어야합니다.)</em></strong></p>

<p><img src="https://github.com/MyCatlikesChuru/MyCatlikesChuru.github.io/assets/95069395/77fc1dfb-857e-4bad-a73a-0b74825fc167" alt="image" class="align-left" style="max-width: 100%" /></p>

<p>현재 5개의 권한이 보이지만 원래는 맨아래에 있는 <br />
<code class="language-plaintext highlighter-rouge">CreateDeployMent</code>라는 정책은 없었다.</p>

<p>2개는 S3에 대한 권한 설정, 2개는 Code Deploy에 해당하는 권한정책 설정이다. <br />
여기서 에러가 발생해 <code class="language-plaintext highlighter-rouge">인라인 정책 생성</code>을 통해서 <code class="language-plaintext highlighter-rouge">CreateDeployMent</code>라는 정책을 만들었다.</p>

<p><br /></p>

<p><code class="language-plaintext highlighter-rouge">인라인 정책 생성</code> 버튼을 누르면 아래와 같은 화면으로 넘어온다. <br />
(JSON 탭을 누르시면 같은 화면으로 넘어옵니다.)</p>

<p><img src="https://github.com/MyCatlikesChuru/MyCatlikesChuru.github.io/assets/95069395/20eff7d9-f775-4bba-9543-27a661904b10" alt="image" class="align-left" style="max-width: 100%" /></p>

<p>해당 정책 편집 페이지에서 위와 같이</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"Version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2012-10-17"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"Statement"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"Effect"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Allow"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"Action"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="s2">"codedeploy:*"</span><span class="w">
            </span><span class="p">],</span><span class="w">
            </span><span class="nl">"Resource"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="s2">"arn:aws:codedeploy:ap-northeast-2:계정ID:*"</span><span class="w">
            </span><span class="p">]</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>정책을 입력해주면 된다. 여기서 <code class="language-plaintext highlighter-rouge">codedeploy:*</code> 로 전체권한을 와일드카드로 허용시켜주고 <br />
Resource부분에서도 와일드카드를 사용해 자원에 접근한다는 것을 명시해주었다.</p>

<p>여기서 환경마다 다를 수 있는 점은 <br />
<code class="language-plaintext highlighter-rouge">ap-northeast-2</code>부분과 <code class="language-plaintext highlighter-rouge">계정ID</code> 부분이다.</p>

<p>만약 서울이면 위와 같이 <code class="language-plaintext highlighter-rouge">ap-northeast-2</code> 사용하면되고 각자 환경에 맞는 리전을 선택하면된다. <br />
또한 계정 ID는 본인 계정의 12자리 계정 ID를 뜻한다.</p>

<p>맨우측 상단에 본인 계정을 눌러보면 탭으로 계정 ID 12자리가 <br />
<code class="language-plaintext highlighter-rouge">xxxx-xxxx-xxxx</code>와 같은 번호형태로 되어있을 것이다. <br />
해당 번호를 계정ID자리에 쭉 12자리를 나열하면된다.</p>

<p><br /></p>

<p>해당 정책을 설정하고 다시 Git Actions를 실행시키면</p>

<p><img src="https://github.com/MyCatlikesChuru/MyCatlikesChuru.github.io/assets/95069395/48ba44fd-97c6-4d6e-8452-5ec9db922ff2" alt="image" class="align-left" style="max-width: 100%" /></p>

<p>정상적으로 에러없이 통과되는 모습을 볼 수 있다.</p>

<p><br /></p>]]></content><author><name>LEE JAEHYEOK</name></author><category term="AWS" /><category term="AWS" /><category term="Code Deploy" /><summary type="html"><![CDATA[🐞 에러 상황]]></summary></entry><entry><title type="html">[Programmers] 없어진 기록 찾기 (MySQL)</title><link href="http://localhost:4000/sql/2023/05/14/sql-lostrecord.html" rel="alternate" type="text/html" title="[Programmers] 없어진 기록 찾기 (MySQL)" /><published>2023-05-14T00:00:00+09:00</published><updated>2023-05-14T00:00:00+09:00</updated><id>http://localhost:4000/sql/2023/05/14/sql-lostrecord</id><content type="html" xml:base="http://localhost:4000/sql/2023/05/14/sql-lostrecord.html"><![CDATA[<h2 id="-문제--없어진-기록-찾기">📌 문제 : <a href="https://school.programmers.co.kr/learn/courses/30/lessons/59042">없어진 기록 찾기</a></h2>

<h3 id="-문제-설명">📖 문제 설명</h3>

<p><code>ANIMAL_INS</code> 테이블은 동물 보호소에 들어온 동물의 정보를 담은 테이블입니다. <code>ANIMAL_INS</code> 테이블 구조는 다음과 같으며, <code>ANIMAL_ID</code>, <code>ANIMAL_TYPE</code>, <code>DATETIME</code>, <code>INTAKE_CONDITION</code>, <code>NAME</code>, <code>SEX_UPON_INTAKE</code>는 각각 동물의 아이디, 생물 종, 보호 시작일, 보호 시작 시 상태, 이름, 성별 및 중성화 여부를 나타냅니다.</p>
<table class="table">
        <thead><tr>
<th>NAME</th>
<th>TYPE</th>
<th>NULLABLE</th>
</tr>
</thead>
        <tbody><tr>
<td>ANIMAL_ID</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
<tr>
<td>ANIMAL_TYPE</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
<tr>
<td>DATETIME</td>
<td>DATETIME</td>
<td>FALSE</td>
</tr>
<tr>
<td>INTAKE_CONDITION</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
<tr>
<td>NAME</td>
<td>VARCHAR(N)</td>
<td>TRUE</td>
</tr>
<tr>
<td>SEX_UPON_INTAKE</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
</tbody>
      </table>
<p><code>ANIMAL_OUTS</code> 테이블은 동물 보호소에서 입양 보낸 동물의 정보를 담은 테이블입니다. <code>ANIMAL_OUTS</code> 테이블 구조는 다음과 같으며, <code>ANIMAL_ID</code>, <code>ANIMAL_TYPE</code>, <code>DATETIME</code>, <code>NAME</code>, <code>SEX_UPON_OUTCOME</code>는 각각 동물의 아이디, 생물 종, 입양일, 이름, 성별 및 중성화 여부를 나타냅니다. <code>ANIMAL_OUTS</code> 테이블의 <code>ANIMAL_ID</code>는 <code>ANIMAL_INS</code>의 <code>ANIMAL_ID</code>의 외래 키입니다.</p>
<table class="table">
        <thead><tr>
<th>NAME</th>
<th>TYPE</th>
<th>NULLABLE</th>
</tr>
</thead>
        <tbody><tr>
<td>ANIMAL_ID</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
<tr>
<td>ANIMAL_TYPE</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
<tr>
<td>DATETIME</td>
<td>DATETIME</td>
<td>FALSE</td>
</tr>
<tr>
<td>NAME</td>
<td>VARCHAR(N)</td>
<td>TRUE</td>
</tr>
<tr>
<td>SEX_UPON_OUTCOME</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
</tbody>
      </table>
<p>천재지변으로 인해 일부 데이터가 유실되었습니다. 입양을 간 기록은 있는데, 보호소에 들어온 기록이 없는 동물의 ID와 이름을 ID 순으로 조회하는 SQL문을 작성해주세요. </p>

<h5>예시</h5>

<p>예를 들어, <code>ANIMAL_INS</code> 테이블과 <code>ANIMAL_OUTS</code> 테이블이 다음과 같다면</p>

<p><code>ANIMAL_INS</code></p>
<table class="table">
        <thead><tr>
<th>ANIMAL_ID</th>
<th>ANIMAL_TYPE</th>
<th>DATETIME</th>
<th>INTAKE_CONDITION</th>
<th>NAME</th>
<th>SEX_UPON_INTAKE</th>
</tr>
</thead>
        <tbody><tr>
<td>A352713</td>
<td>Cat</td>
<td>2017-04-13 16:29:00</td>
<td>Normal</td>
<td>Gia</td>
<td>Spayed Female</td>
</tr>
<tr>
<td>A350375</td>
<td>Cat</td>
<td>2017-03-06 15:01:00</td>
<td>Normal</td>
<td>Meo</td>
<td>Neutered Male</td>
</tr>
</tbody>
      </table>
<p><code>ANIMAL_OUTS</code></p>
<table class="table">
        <thead><tr>
<th>ANIMAL_ID</th>
<th>ANIMAL_TYPE</th>
<th>DATETIME</th>
<th>NAME</th>
<th>SEX_UPON_OUTCOME</th>
</tr>
</thead>
        <tbody><tr>
<td>A349733</td>
<td>Dog</td>
<td>2017-09-27 19:09:00</td>
<td>Allie</td>
<td>Spayed Female</td>
</tr>
<tr>
<td>A352713</td>
<td>Cat</td>
<td>2017-04-25 12:25:00</td>
<td>Gia</td>
<td>Spayed Female</td>
</tr>
<tr>
<td>A349990</td>
<td>Cat</td>
<td>2018-02-02 14:18:00</td>
<td>Spice</td>
<td>Spayed Female</td>
</tr>
</tbody>
      </table>
<p><code>ANIMAL_OUTS</code> 테이블에서</p>

<ul>
<li>Allie의 ID는 <code>ANIMAL_INS</code>에 없으므로, Allie의 데이터는 유실되었습니다.</li>
<li>Gia의 ID는 <code>ANIMAL_INS</code>에 있으므로, Gia의 데이터는 유실되지 않았습니다.</li>
<li>Spice의 ID는 <code>ANIMAL_INS</code>에 없으므로, Spice의 데이터는 유실되었습니다.</li>
</ul>

<p>따라서 SQL문을 실행하면 다음과 같이 나와야 합니다. </p>
<table class="table">
        <thead><tr>
<th>ANIMAL_ID</th>
<th>NAME</th>
</tr>
</thead>
        <tbody><tr>
<td>A349733</td>
<td>Allie</td>
</tr>
<tr>
<td>A349990</td>
<td>Spice</td>
</tr>
</tbody>
      </table>
<hr />

<p>본 문제는 <a href="https://www.kaggle.com/aaronschlegel/austin-animal-center-shelter-intakes-and-outcomes" target="_blank" rel="noopener">Kaggle의 "Austin Animal Center Shelter Intakes and Outcomes"</a>에서 제공하는 데이터를 사용하였으며 <a href="https://opendatacommons.org/licenses/odbl/1.0/" target="_blank" rel="noopener">ODbL</a>의 적용을 받습니다.</p>

<blockquote>
  <p>출처: 프로그래머스 코딩 테스트 연습, https://programmers.co.kr/learn/challenges</p>
</blockquote>

<hr />

<h2 id="-문제-풀이">🗝 문제 풀이</h2>

<ol>
  <li>LEFT JOIN을 통해 두개의 테이블을 합친다.</li>
  <li>ANIMAL_INS 테이블의 값이 null인것이 없어진 기록이다.</li>
  <li>WHERE절을 이용해 없어진 기록들만 필터링한다.</li>
  <li>ANIMAL_ID 기준으로 오름차순 정렬한다.</li>
</ol>

<pre><code class="language-roomsql">SELECT o.ANIMAL_ID,
    o.NAME
FROM ANIMAL_OUTS o
LEFT JOIN ANIMAL_INS i
ON i.ANIMAL_ID = o.ANIMAL_ID
WHERE i.ANIMAL_ID is null
ORDER BY o.ANIMAL_ID ASC;
</code></pre>

<p><br /></p>]]></content><author><name>LEE JAEHYEOK</name></author><category term="SQL" /><category term="SQL" /><category term="Programmers" /><summary type="html"><![CDATA[📌 문제 : 없어진 기록 찾기]]></summary></entry><entry><title type="html">[Programmers] 있었는데요 없었습니다 (MySQL)</title><link href="http://localhost:4000/sql/2023/05/13/sql-have.html" rel="alternate" type="text/html" title="[Programmers] 있었는데요 없었습니다 (MySQL)" /><published>2023-05-13T00:00:00+09:00</published><updated>2023-05-13T00:00:00+09:00</updated><id>http://localhost:4000/sql/2023/05/13/sql-have</id><content type="html" xml:base="http://localhost:4000/sql/2023/05/13/sql-have.html"><![CDATA[<h2 id="-문제--있었는데요-없었습니다">📌 문제 : <a href="https://school.programmers.co.kr/learn/courses/30/lessons/59043">있었는데요 없었습니다</a></h2>

<h3 id="-문제-설명">📖 문제 설명</h3>

<p><code>ANIMAL_INS</code> 테이블은 동물 보호소에 들어온 동물의 정보를 담은 테이블입니다. <code>ANIMAL_INS</code> 테이블 구조는 다음과 같으며, <code>ANIMAL_ID</code>, <code>ANIMAL_TYPE</code>, <code>DATETIME</code>, <code>INTAKE_CONDITION</code>, <code>NAME</code>, <code>SEX_UPON_INTAKE</code>는 각각 동물의 아이디, 생물 종, 보호 시작일, 보호 시작 시 상태, 이름, 성별 및 중성화 여부를 나타냅니다.</p>
<table class="table">
        <thead><tr>
<th>NAME</th>
<th>TYPE</th>
<th>NULLABLE</th>
</tr>
</thead>
        <tbody><tr>
<td>ANIMAL_ID</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
<tr>
<td>ANIMAL_TYPE</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
<tr>
<td>DATETIME</td>
<td>DATETIME</td>
<td>FALSE</td>
</tr>
<tr>
<td>INTAKE_CONDITION</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
<tr>
<td>NAME</td>
<td>VARCHAR(N)</td>
<td>TRUE</td>
</tr>
<tr>
<td>SEX_UPON_INTAKE</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
</tbody>
      </table>
<p><code>ANIMAL_OUTS</code> 테이블은 동물 보호소에서 입양 보낸 동물의 정보를 담은 테이블입니다. <code>ANIMAL_OUTS</code> 테이블 구조는 다음과 같으며, <code>ANIMAL_ID</code>, <code>ANIMAL_TYPE</code>, <code>DATETIME</code>, <code>NAME</code>, <code>SEX_UPON_OUTCOME</code>는 각각 동물의 아이디, 생물 종, 입양일, 이름, 성별 및 중성화 여부를 나타냅니다. <code>ANIMAL_OUTS</code> 테이블의 <code>ANIMAL_ID</code>는 <code>ANIMAL_INS</code>의 <code>ANIMAL_ID</code>의 외래 키입니다.</p>
<table class="table">
        <thead><tr>
<th>NAME</th>
<th>TYPE</th>
<th>NULLABLE</th>
</tr>
</thead>
        <tbody><tr>
<td>ANIMAL_ID</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
<tr>
<td>ANIMAL_TYPE</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
<tr>
<td>DATETIME</td>
<td>DATETIME</td>
<td>FALSE</td>
</tr>
<tr>
<td>NAME</td>
<td>VARCHAR(N)</td>
<td>TRUE</td>
</tr>
<tr>
<td>SEX_UPON_OUTCOME</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
</tbody>
      </table>
<p>관리자의 실수로 일부 동물의 입양일이 잘못 입력되었습니다. 보호 시작일보다 입양일이 더 빠른 동물의 아이디와 이름을 조회하는 SQL문을 작성해주세요. 이때 결과는 보호 시작일이 빠른 순으로 조회해야합니다. </p>

<h5>예시</h5>

<p>예를 들어, <code>ANIMAL_INS</code> 테이블과 <code>ANIMAL_OUTS</code> 테이블이 다음과 같다면</p>

<p><code>ANIMAL_INS</code></p>
<table class="table">
        <thead><tr>
<th>ANIMAL_ID</th>
<th>ANIMAL_TYPE</th>
<th>DATETIME</th>
<th>INTAKE_CONDITION</th>
<th>NAME</th>
<th>SEX_UPON_INTAKE</th>
</tr>
</thead>
        <tbody><tr>
<td>A350276</td>
<td>Cat</td>
<td>2017-08-13 13:50:00</td>
<td>Normal</td>
<td>Jewel</td>
<td>Spayed Female</td>
</tr>
<tr>
<td>A381217</td>
<td>Dog</td>
<td>2017-07-08 09:41:00</td>
<td>Sick</td>
<td>Cherokee</td>
<td>Neutered Male</td>
</tr>
</tbody>
      </table>
<p><code>ANIMAL_OUTS</code></p>
<table class="table">
        <thead><tr>
<th>ANIMAL_ID</th>
<th>ANIMAL_TYPE</th>
<th>DATETIME</th>
<th>NAME</th>
<th>SEX_UPON_OUTCOME</th>
</tr>
</thead>
        <tbody><tr>
<td>A350276</td>
<td>Cat</td>
<td>2018-01-28 17:51:00</td>
<td>Jewel</td>
<td>Spayed Female</td>
</tr>
<tr>
<td>A381217</td>
<td>Dog</td>
<td>2017-06-09 18:51:00</td>
<td>Cherokee</td>
<td>Neutered Male</td>
</tr>
</tbody>
      </table>
<p>SQL문을 실행하면 다음과 같이 나와야 합니다. </p>
<table class="table">
        <thead><tr>
<th>ANIMAL_ID</th>
<th>NAME</th>
</tr>
</thead>
        <tbody><tr>
<td>A381217</td>
<td>Cherokee</td>
</tr>
</tbody>
      </table>
<hr />

<p>본 문제는 <a href="https://www.kaggle.com/aaronschlegel/austin-animal-center-shelter-intakes-and-outcomes" target="_blank" rel="noopener">Kaggle의 "Austin Animal Center Shelter Intakes and Outcomes"</a>에서 제공하는 데이터를 사용하였으며 <a href="https://opendatacommons.org/licenses/odbl/1.0/" target="_blank" rel="noopener">ODbL</a>의 적용을 받습니다.</p>

<hr />

<h2 id="-문제-풀이">🗝 문제 풀이</h2>

<ol>
  <li>LEFT JOIN을 통해 두개의 테이블을 합친다.</li>
  <li>보호시작일(i.DATETIME) &gt; 입양일(o.DATETIME)이 되어야 입양일이 더빠른 조건식이다.</li>
  <li>WHERE절을 이용해 입양일이 보호시작일보다 빠른 데이터만 필터링한다.</li>
  <li>보호시작일 기준으로 오름차순 정렬한다.</li>
</ol>

<pre><code class="language-roomsql">SELECT o.ANIMAL_ID,
    o.NAME
FROM ANIMAL_OUTS o
LEFT JOIN ANIMAL_INS i
ON o.ANIMAL_ID = i.ANIMAL_ID
WHERE i.DATETIME &gt; o.DATETIME
ORDER BY i.DATETIME ASC;
</code></pre>

<p><br /></p>]]></content><author><name>LEE JAEHYEOK</name></author><category term="SQL" /><category term="SQL" /><category term="Programmers" /><summary type="html"><![CDATA[📌 문제 : 있었는데요 없었습니다]]></summary></entry><entry><title type="html">[Programmers] 오랜 기간 보호한 동물(1) (MySQL)</title><link href="http://localhost:4000/sql/2023/05/12/sql-longkeepanimal.html" rel="alternate" type="text/html" title="[Programmers] 오랜 기간 보호한 동물(1) (MySQL)" /><published>2023-05-12T00:00:00+09:00</published><updated>2023-05-12T00:00:00+09:00</updated><id>http://localhost:4000/sql/2023/05/12/sql-longkeepanimal</id><content type="html" xml:base="http://localhost:4000/sql/2023/05/12/sql-longkeepanimal.html"><![CDATA[<h2 id="-문제--오랜-기간-보호한-동물1">📌 문제 : <a href="https://school.programmers.co.kr/learn/courses/30/lessons/59044">오랜 기간 보호한 동물(1)</a></h2>

<h3 id="-문제-설명">📖 문제 설명</h3>

<p><code>ANIMAL_INS</code> 테이블은 동물 보호소에 들어온 동물의 정보를 담은 테이블입니다. <code>ANIMAL_INS</code> 테이블 구조는 다음과 같으며, <code>ANIMAL_ID</code>, <code>ANIMAL_TYPE</code>, <code>DATETIME</code>, <code>INTAKE_CONDITION</code>, <code>NAME</code>, <code>SEX_UPON_INTAKE</code>는 각각 동물의 아이디, 생물 종, 보호 시작일, 보호 시작 시 상태, 이름, 성별 및 중성화 여부를 나타냅니다.</p>
<table class="table">
        <thead><tr>
<th>NAME</th>
<th>TYPE</th>
<th>NULLABLE</th>
</tr>
</thead>
        <tbody><tr>
<td>ANIMAL_ID</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
<tr>
<td>ANIMAL_TYPE</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
<tr>
<td>DATETIME</td>
<td>DATETIME</td>
<td>FALSE</td>
</tr>
<tr>
<td>INTAKE_CONDITION</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
<tr>
<td>NAME</td>
<td>VARCHAR(N)</td>
<td>TRUE</td>
</tr>
<tr>
<td>SEX_UPON_INTAKE</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
</tbody>
      </table>
<p><code>ANIMAL_OUTS</code> 테이블은 동물 보호소에서 입양 보낸 동물의 정보를 담은 테이블입니다. <code>ANIMAL_OUTS</code> 테이블 구조는 다음과 같으며, <code>ANIMAL_ID</code>, <code>ANIMAL_TYPE</code>, <code>DATETIME</code>, <code>NAME</code>, <code>SEX_UPON_OUTCOME</code>는 각각 동물의 아이디, 생물 종, 입양일, 이름, 성별 및 중성화 여부를 나타냅니다. <code>ANIMAL_OUTS</code> 테이블의 <code>ANIMAL_ID</code>는 <code>ANIMAL_INS</code>의 <code>ANIMAL_ID</code>의 외래 키입니다.</p>
<table class="table">
        <thead><tr>
<th>NAME</th>
<th>TYPE</th>
<th>NULLABLE</th>
</tr>
</thead>
        <tbody><tr>
<td>ANIMAL_ID</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
<tr>
<td>ANIMAL_TYPE</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
<tr>
<td>DATETIME</td>
<td>DATETIME</td>
<td>FALSE</td>
</tr>
<tr>
<td>NAME</td>
<td>VARCHAR(N)</td>
<td>TRUE</td>
</tr>
<tr>
<td>SEX_UPON_OUTCOME</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
</tbody>
      </table>
<p>아직 입양을 못 간 동물 중, 가장 오래 보호소에 있었던 동물 3마리의 이름과 보호 시작일을 조회하는 SQL문을 작성해주세요. 이때 결과는 보호 시작일 순으로 조회해야 합니다.</p>

<h5>예시</h5>

<p>예를 들어, <code>ANIMAL_INS</code> 테이블과 <code>ANIMAL_OUTS</code> 테이블이 다음과 같다면</p>

<p><code>ANIMAL_INS</code></p>
<table class="table">
        <thead><tr>
<th>ANIMAL_ID</th>
<th>ANIMAL_TYPE</th>
<th>DATETIME</th>
<th>INTAKE_CONDITION</th>
<th>NAME</th>
<th>SEX_UPON_INTAKE</th>
</tr>
</thead>
        <tbody><tr>
<td>A354597</td>
<td>Cat</td>
<td>2014-05-02 12:16:00</td>
<td>Normal</td>
<td>Ariel</td>
<td>Spayed Female</td>
</tr>
<tr>
<td>A373687</td>
<td>Dog</td>
<td>2014-03-20 12:31:00</td>
<td>Normal</td>
<td>Rosie</td>
<td>Spayed Female</td>
</tr>
<tr>
<td>A412697</td>
<td>Dog</td>
<td>2016-01-03 16:25:00</td>
<td>Normal</td>
<td>Jackie</td>
<td>Neutered Male</td>
</tr>
<tr>
<td>A413789</td>
<td>Dog</td>
<td>2016-04-19 13:28:00</td>
<td>Normal</td>
<td>Benji</td>
<td>Spayed Female</td>
</tr>
<tr>
<td>A414198</td>
<td>Dog</td>
<td>2015-01-29 15:01:00</td>
<td>Normal</td>
<td>Shelly</td>
<td>Spayed Female</td>
</tr>
<tr>
<td>A368930</td>
<td>Dog</td>
<td>2014-06-08 13:20:00</td>
<td>Normal</td>
<td></td>
<td>Spayed Female</td>
</tr>
</tbody>
      </table>
<p><code>ANIMAL_OUTS</code></p>
<table class="table">
        <thead><tr>
<th>ANIMAL_ID</th>
<th>ANIMAL_TYPE</th>
<th>DATETIME</th>
<th>NAME</th>
<th>SEX_UPON_OUTCOME</th>
</tr>
</thead>
        <tbody><tr>
<td>A354597</td>
<td>Cat</td>
<td>2014-05-02 12:16:00</td>
<td>Ariel</td>
<td>Spayed Female</td>
</tr>
<tr>
<td>A373687</td>
<td>Dog</td>
<td>2014-03-20 12:31:00</td>
<td>Rosie</td>
<td>Spayed Female</td>
</tr>
<tr>
<td>A368930</td>
<td>Dog</td>
<td>2014-06-13 15:52:00</td>
<td></td>
<td>Spayed Female</td>
</tr>
</tbody>
      </table>
<p>SQL문을 실행하면 다음과 같이 나와야 합니다.</p>
<table class="table">
        <thead><tr>
<th>NAME</th>
<th>DATETIME</th>
</tr>
</thead>
        <tbody><tr>
<td>Shelly</td>
<td>2015-01-29 15:01:00</td>
</tr>
<tr>
<td>Jackie</td>
<td>2016-01-03 16:25:00</td>
</tr>
<tr>
<td>Benji</td>
<td>2016-04-19 13:28:00</td>
</tr>
</tbody>
      </table>
<p>※ 입양을 가지 못한 동물이 3마리 이상인 경우만 입력으로 주어집니다.</p>

<hr />

<p>본 문제는 <a href="https://www.kaggle.com/aaronschlegel/austin-animal-center-shelter-intakes-and-outcomes" target="_blank" rel="noopener">Kaggle의 "Austin Animal Center Shelter Intakes and Outcomes"</a>에서 제공하는 데이터를 사용하였으며 <a href="https://opendatacommons.org/licenses/odbl/1.0/" target="_blank" rel="noopener">ODbL</a>의 적용을 받습니다.</p>

<hr />

<h2 id="-문제-풀이">🗝 문제 풀이</h2>

<ol>
  <li>ORDER BY의 기준을 오래된 입양순이기 때문에 ANIMAL_INS 테이블에서 DATETIME을 기준으로 오름차순 정렬한다.</li>
  <li>입양 여부를 파악하기 위해서 JOIN을 한다.</li>
  <li>여기서 보호가 가장 오래된 동물은 아직 입양되지 않은 동물이기 때문에 is null로 찾아준다.</li>
  <li>3마리만 표시해야하기 때문에 LIMIT를 사용</li>
</ol>

<pre><code class="language-roomsql">SELECT i.NAME,
    i.DATETIME
FROM ANIMAL_INS i
LEFT JOIN ANIMAL_OUTS o
ON o.ANIMAL_ID = i.ANIMAL_ID
WHERE o.DATETIME is null
ORDER BY i.DATETIME ASC
LIMIT 3;
</code></pre>

<p><br /></p>]]></content><author><name>LEE JAEHYEOK</name></author><category term="SQL" /><category term="SQL" /><category term="Programmers" /><summary type="html"><![CDATA[📌 문제 : 오랜 기간 보호한 동물(1)]]></summary></entry><entry><title type="html">[Programmers] 오랜 기간 보호한 동물(2) (MySQL)</title><link href="http://localhost:4000/sql/2023/05/09/sql-longkeepanimal.html" rel="alternate" type="text/html" title="[Programmers] 오랜 기간 보호한 동물(2) (MySQL)" /><published>2023-05-09T00:00:00+09:00</published><updated>2023-05-09T00:00:00+09:00</updated><id>http://localhost:4000/sql/2023/05/09/sql-longkeepanimal</id><content type="html" xml:base="http://localhost:4000/sql/2023/05/09/sql-longkeepanimal.html"><![CDATA[<h2 id="-문제--오랜-기간-보호한-동물2">📌 문제 : <a href="https://school.programmers.co.kr/learn/courses/30/lessons/59411">오랜 기간 보호한 동물(2)</a></h2>

<h3 id="-문제-설명">📖 문제 설명</h3>

<p><code>ANIMAL_INS</code> 테이블은 동물 보호소에 들어온 동물의 정보를 담은 테이블입니다. <code>ANIMAL_INS</code> 테이블 구조는 다음과 같으며, <code>ANIMAL_ID</code>, <code>ANIMAL_TYPE</code>, <code>DATETIME</code>, <code>INTAKE_CONDITION</code>, <code>NAME</code>, <code>SEX_UPON_INTAKE</code>는 각각 동물의 아이디, 생물 종, 보호 시작일, 보호 시작 시 상태, 이름, 성별 및 중성화 여부를 나타냅니다.</p>
<table class="table">
        <thead><tr>
<th>NAME</th>
<th>TYPE</th>
<th>NULLABLE</th>
</tr>
</thead>
        <tbody><tr>
<td>ANIMAL_ID</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
<tr>
<td>ANIMAL_TYPE</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
<tr>
<td>DATETIME</td>
<td>DATETIME</td>
<td>FALSE</td>
</tr>
<tr>
<td>INTAKE_CONDITION</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
<tr>
<td>NAME</td>
<td>VARCHAR(N)</td>
<td>TRUE</td>
</tr>
<tr>
<td>SEX_UPON_INTAKE</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
</tbody>
      </table>
<p><code>ANIMAL_OUTS</code> 테이블은 동물 보호소에서 입양 보낸 동물의 정보를 담은 테이블입니다. <code>ANIMAL_OUTS</code> 테이블 구조는 다음과 같으며, <code>ANIMAL_ID</code>, <code>ANIMAL_TYPE</code>, <code>DATETIME</code>, <code>NAME</code>, <code>SEX_UPON_OUTCOME</code>는 각각 동물의 아이디, 생물 종, 입양일, 이름, 성별 및 중성화 여부를 나타냅니다. <code>ANIMAL_OUTS</code> 테이블의 <code>ANIMAL_ID</code>는 <code>ANIMAL_INS</code>의 <code>ANIMAL_ID</code>의 외래 키입니다.</p>
<table class="table">
        <thead><tr>
<th>NAME</th>
<th>TYPE</th>
<th>NULLABLE</th>
</tr>
</thead>
        <tbody><tr>
<td>ANIMAL_ID</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
<tr>
<td>ANIMAL_TYPE</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
<tr>
<td>DATETIME</td>
<td>DATETIME</td>
<td>FALSE</td>
</tr>
<tr>
<td>NAME</td>
<td>VARCHAR(N)</td>
<td>TRUE</td>
</tr>
<tr>
<td>SEX_UPON_OUTCOME</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
</tr>
</tbody>
      </table>
<p>입양을 간 동물 중, 보호 기간이 가장 길었던 동물 두 마리의 아이디와 이름을 조회하는 SQL문을 작성해주세요. 이때 결과는 보호 기간이 긴 순으로 조회해야 합니다.</p>

<h5>예시</h5>

<p>예를 들어, <code>ANIMAL_INS</code> 테이블과 <code>ANIMAL_OUTS</code> 테이블이 다음과 같다면</p>

<p><code>ANIMAL_INS</code></p>
<table class="table">
        <thead><tr>
<th>ANIMAL_ID</th>
<th>ANIMAL_TYPE</th>
<th>DATETIME</th>
<th>INTAKE_CONDITION</th>
<th>NAME</th>
<th>SEX_UPON_INTAKE</th>
</tr>
</thead>
        <tbody><tr>
<td>A354597</td>
<td>Cat</td>
<td>2014-05-02 12:16:00</td>
<td>Normal</td>
<td>Ariel</td>
<td>Spayed Female</td>
</tr>
<tr>
<td>A362707</td>
<td>Dog</td>
<td>2016-01-27 12:27:00</td>
<td>Sick</td>
<td>Girly Girl</td>
<td>Spayed Female</td>
</tr>
<tr>
<td>A370507</td>
<td>Cat</td>
<td>2014-10-27 14:43:00</td>
<td>Normal</td>
<td>Emily</td>
<td>Spayed Female</td>
</tr>
<tr>
<td>A414513</td>
<td>Dog</td>
<td>2016-06-07 09:17:00</td>
<td>Normal</td>
<td>Rocky</td>
<td>Neutered Male</td>
</tr>
</tbody>
      </table>
<p><code>ANIMAL_OUTS</code></p>
<table class="table">
        <thead><tr>
<th>ANIMAL_ID</th>
<th>ANIMAL_TYPE</th>
<th>DATETIME</th>
<th>NAME</th>
<th>SEX_UPON_OUTCOME</th>
</tr>
</thead>
        <tbody><tr>
<td>A354597</td>
<td>Cat</td>
<td>2014-06-03 12:30:00</td>
<td>Ariel</td>
<td>Spayed Female</td>
</tr>
<tr>
<td>A362707</td>
<td>Dog</td>
<td>2017-01-10 10:44:00</td>
<td>Girly Girl</td>
<td>Spayed Female</td>
</tr>
<tr>
<td>A370507</td>
<td>Cat</td>
<td>2015-08-15 09:24:00</td>
<td>Emily</td>
<td>Spayed Female</td>
</tr>
</tbody>
      </table>
<p>SQL문을 실행하면 다음과 같이 나와야 합니다.</p>
<table class="table">
        <thead><tr>
<th>ANIMAL_ID</th>
<th>NAME</th>
</tr>
</thead>
        <tbody><tr>
<td>A362707</td>
<td>Girly Girl</td>
</tr>
<tr>
<td>A370507</td>
<td>Emily</td>
</tr>
</tbody>
      </table>
<p>※ 입양을 간 동물이 2마리 이상인 경우만 입력으로 주어집니다.</p>

<hr />

<p>본 문제는 <a href="https://www.kaggle.com/aaronschlegel/austin-animal-center-shelter-intakes-and-outcomes" target="_blank" rel="noopener">Kaggle의 "Austin Animal Center Shelter Intakes and Outcomes"</a>에서 제공하는 데이터를 사용하였으며 <a href="https://opendatacommons.org/licenses/odbl/1.0/" target="_blank" rel="noopener">ODbL</a>의 적용을 받습니다.</p>

<blockquote>
  <p>출처: 프로그래머스 코딩 테스트 연습, https://programmers.co.kr/learn/challenges</p>
</blockquote>

<hr />

<h2 id="-문제-풀이">🗝 문제 풀이</h2>

<ol>
  <li>ORDER BY의 기준을 시간차이로 내림차순 정렬한다.</li>
  <li>보호기간을 확인하기 위해서는 두개의 테이블을 JOIN하여 확인해야한다.</li>
  <li>LIMIT를 이용해 가장 높은 값의 2개를 필터링한다.</li>
</ol>

<pre><code class="language-roomsql">SELECT o.ANIMAL_ID,
    o.NAME
FROM ANIMAL_INS o
LEFT JOIN ANIMAL_OUTS i
ON o.ANIMAL_ID = i.ANIMAL_ID
ORDER BY TIMESTAMPDIFF(SECOND, o.DATETIME, i.DATETIME) DESC
LIMIT 2;
</code></pre>

<p><br /></p>]]></content><author><name>LEE JAEHYEOK</name></author><category term="SQL" /><category term="SQL" /><category term="Programmers" /><summary type="html"><![CDATA[📌 문제 : 오랜 기간 보호한 동물(2)]]></summary></entry><entry><title type="html">[Programmers] 헤비 유저가 소유한 장소 (MySQL)</title><link href="http://localhost:4000/sql/2023/05/08/sql-heavyuser.html" rel="alternate" type="text/html" title="[Programmers] 헤비 유저가 소유한 장소 (MySQL)" /><published>2023-05-08T00:00:00+09:00</published><updated>2023-05-08T00:00:00+09:00</updated><id>http://localhost:4000/sql/2023/05/08/sql-heavyuser</id><content type="html" xml:base="http://localhost:4000/sql/2023/05/08/sql-heavyuser.html"><![CDATA[<h2 id="-문제--헤비-유저가-소유한-장소">📌 문제 : <a href="https://school.programmers.co.kr/learn/courses/30/lessons/77487">헤비 유저가 소유한 장소</a></h2>

<h3 id="-문제-설명">📖 문제 설명</h3>

<p><code>PLACES</code> 테이블은 공간 임대 서비스에 등록된 공간의 정보를 담은 테이블입니다. <code>PLACES</code> 테이블의 구조는 다음과 같으며 <code>ID</code>, <code>NAME</code>, <code>HOST_ID</code>는 각각 공간의 아이디, 이름, 공간을 소유한 유저의 아이디를 나타냅니다. <code>ID</code>는 기본키입니다.</p>
<table class="table">
        <thead><tr>
<th>NAME</th>
<th>TYPE</th>
</tr>
</thead>
        <tbody><tr>
<td>ID</td>
<td>INT</td>
</tr>
<tr>
<td>NAME</td>
<td>VARCHAR</td>
</tr>
<tr>
<td>HOST_ID</td>
<td>INT</td>
</tr>
</tbody>
      </table>
<h5>문제</h5>

<p>이 서비스에서는 공간을 둘 이상 등록한 사람을 "헤비 유저"라고 부릅니다. 헤비 유저가 등록한 공간의 정보를 아이디 순으로 조회하는 SQL문을 작성해주세요.</p>

<h5>예시</h5>

<p>예를 들어, <code>PLACES</code> 테이블이 다음과 같다면</p>
<table class="table">
        <thead><tr>
<th>ID</th>
<th>NAME</th>
<th>HOST_ID</th>
</tr>
</thead>
        <tbody><tr>
<td>4431977</td>
<td>BOUTIQUE STAYS - Somerset Terrace, Pet Friendly</td>
<td>760849</td>
</tr>
<tr>
<td>5194998</td>
<td>BOUTIQUE STAYS - Elwood Beaches 3, Pet Friendly</td>
<td>760849</td>
</tr>
<tr>
<td>16045624</td>
<td>Urban Jungle in the Heart of Melbourne</td>
<td>30900122</td>
</tr>
<tr>
<td>17810814</td>
<td>Stylish Bayside Retreat with a Luscious Garden</td>
<td>760849</td>
</tr>
<tr>
<td>22740286</td>
<td>FREE PARKING - The Velvet Lux in Melbourne CBD</td>
<td>30900122</td>
</tr>
<tr>
<td>22868779</td>
<td>★ Fresh Fitzroy Pad with City Views! ★</td>
<td>21058208</td>
</tr>
</tbody>
      </table>
<ul>
<li>760849번 유저는 공간을 3개 등록했으므로 이 유저는 헤비유저입니다. </li>
<li>30900122번 유저는 공간을 2개 등록했으므로 이 유저는 헤비유저입니다.</li>
<li>21058208번 유저는 공간을 1개 등록했으므로 이 유저는 헤비유저가 아닙니다.</li>
</ul>

<p>따라서 SQL 문을 실행하면 다음과 같이 나와야 합니다.</p>
<table class="table">
        <thead><tr>
<th>ID</th>
<th>NAME</th>
<th>HOST_ID</th>
</tr>
</thead>
        <tbody><tr>
<td>4431977</td>
<td>BOUTIQUE STAYS - Somerset Terrace, Pet Friendly</td>
<td>760849</td>
</tr>
<tr>
<td>5194998</td>
<td>BOUTIQUE STAYS - Elwood Beaches 3, Pet Friendly</td>
<td>760849</td>
</tr>
<tr>
<td>16045624</td>
<td>Urban Jungle in the Heart of Melbourne</td>
<td>30900122</td>
</tr>
<tr>
<td>17810814</td>
<td>Stylish Bayside Retreat with a Luscious Garden</td>
<td>760849</td>
</tr>
<tr>
<td>22740286</td>
<td>FREE PARKING - The Velvet Lux in Melbourne CBD</td>
<td>30900122</td>
</tr>
</tbody>
      </table>

<blockquote>
  <p>출처: 프로그래머스 코딩 테스트 연습, https://programmers.co.kr/learn/challenges</p>
</blockquote>

<hr />

<h2 id="-문제-풀이">🗝 문제 풀이</h2>

<ol>
  <li>HOST_ID가 2개 이상인 데이터들만 추출하면되는 간단한 문제이다.</li>
  <li>SUB 쿼리를 이용하여 HOST_ID를 GROUP BY하여 일치한 값만 추출한다.</li>
  <li>ID 기준으로 오름차순 정렬</li>
</ol>

<pre><code class="language-roomsql">SELECT *
FROM PLACES
WHERE HOST_ID IN (
    SELECT HOST_ID
    FROM PLACES
    GROUP BY HOST_ID
    HAVING COUNT(HOST_ID) &gt;= 2
)
ORDER BY ID ASC;
</code></pre>

<p><br /></p>]]></content><author><name>LEE JAEHYEOK</name></author><category term="SQL" /><category term="SQL" /><category term="Programmers" /><summary type="html"><![CDATA[📌 문제 : 헤비 유저가 소유한 장소]]></summary></entry><entry><title type="html">[Programmers] 조건별로 분류하여 주문상태 출력하기 (MySQL)</title><link href="http://localhost:4000/sql/2023/05/06/sql-orderseparate.html" rel="alternate" type="text/html" title="[Programmers] 조건별로 분류하여 주문상태 출력하기 (MySQL)" /><published>2023-05-06T00:00:00+09:00</published><updated>2023-05-06T00:00:00+09:00</updated><id>http://localhost:4000/sql/2023/05/06/sql-orderseparate</id><content type="html" xml:base="http://localhost:4000/sql/2023/05/06/sql-orderseparate.html"><![CDATA[<h2 id="-문제--조건별로-분류하여-주문상태-출력하기">📌 문제 : <a href="https://school.programmers.co.kr/learn/courses/30/lessons/131113">조건별로 분류하여 주문상태 출력하기</a></h2>

<h3 id="-문제-설명">📖 문제 설명</h3>

<p>다음은 식품공장의 주문정보를 담은 <code>FOOD_ORDER</code> 테이블입니다. <code>FOOD_ORDER</code> 테이블은 다음과 같으며 <code>ORDER_ID</code>, <code>PRODUCT_ID</code>, <code>AMOUNT</code>, <code>PRODUCE_DATE</code>, <code>IN_DATE</code>,<code>OUT_DATE</code>,<code>FACTORY_ID</code>, <code>WAREHOUSE_ID</code>는 각각 주문 ID, 제품 ID, 주문양, 생산일자, 입고일자, 출고일자, 공장 ID, 창고 ID를 의미합니다.</p>
<table class="table">
        <thead><tr>
<th>Column name</th>
<th>Type</th>
<th>Nullable</th>
</tr>
</thead>
        <tbody><tr>
<td>ORDER_ID</td>
<td>VARCHAR(10)</td>
<td>FALSE</td>
</tr>
<tr>
<td>PRODUCT_ID</td>
<td>VARCHAR(5)</td>
<td>FALSE</td>
</tr>
<tr>
<td>AMOUNT</td>
<td>NUMBER</td>
<td>FALSE</td>
</tr>
<tr>
<td>PRODUCE_DATE</td>
<td>DATE</td>
<td>TRUE</td>
</tr>
<tr>
<td>IN_DATE</td>
<td>DATE</td>
<td>TRUE</td>
</tr>
<tr>
<td>OUT_DATE</td>
<td>DATE</td>
<td>TRUE</td>
</tr>
<tr>
<td>FACTORY_ID</td>
<td>VARCHAR(10)</td>
<td>FALSE</td>
</tr>
<tr>
<td>WAREHOUSE_ID</td>
<td>VARCHAR(10)</td>
<td>FALSE</td>
</tr>
</tbody>
      </table>
<hr />

<h5>문제</h5>

<p><code>FOOD_ORDER</code> 테이블에서 5월 1일을 기준으로 주문 ID, 제품 ID, 출고일자, 출고여부를 조회하는 SQL문을 작성해주세요. 출고여부는 5월 1일까지 출고완료로 이 후 날짜는 출고 대기로 미정이면 출고미정으로 출력해주시고, 결과는 주문 ID를 기준으로 오름차순 정렬해주세요.</p>

<hr />

<h5>예시</h5>

<p><code>FOOD_ORDER</code> 테이블이 다음과 같을 때</p>
<table class="table">
        <thead><tr>
<th>ORDER_ID</th>
<th>PRODUCT_ID</th>
<th>AMOUNT</th>
<th>PRODUCE_DATE</th>
<th>IN_DATE</th>
<th>OUT_DATE</th>
<th>FACTORY_ID</th>
<th>WAREHOUSE_ID</th>
</tr>
</thead>
        <tbody><tr>
<td>OD00000051</td>
<td>P0002</td>
<td>4000</td>
<td>2022-04-01</td>
<td>2022-04-21</td>
<td>2022-04-21</td>
<td>FT19970003</td>
<td>WH0005</td>
</tr>
<tr>
<td>OD00000052</td>
<td>P0003</td>
<td>2500</td>
<td>2022-04-10</td>
<td>2022-04-27</td>
<td>2022-04-27</td>
<td>FT19970003</td>
<td>WH0006</td>
</tr>
<tr>
<td>OD00000053</td>
<td>P0005</td>
<td>6200</td>
<td>2022-04-15</td>
<td>2022-04-30</td>
<td>2022-05-01</td>
<td>FT19940003</td>
<td>WH0003</td>
</tr>
<tr>
<td>OD00000054</td>
<td>P0006</td>
<td>1000</td>
<td>2022-04-21</td>
<td>2022-04-30</td>
<td>NULL</td>
<td>FT19940003</td>
<td>WH0009</td>
</tr>
<tr>
<td>OD00000055</td>
<td>P0008</td>
<td>1500</td>
<td>2022-04-25</td>
<td>2022-05-11</td>
<td>2022-05-11</td>
<td>FT19980003</td>
<td>WH0009</td>
</tr>
</tbody>
      </table>
<p>SQL을 실행하면 다음과 같이 출력되어야 합니다.</p>
<table class="table">
        <thead><tr>
<th>ORDER_ID</th>
<th>PRODUCT_ID</th>
<th>OUT_DATE</th>
<th>출고여부</th>
</tr>
</thead>
        <tbody><tr>
<td>OD00000051</td>
<td>P0002</td>
<td>2022-04-21</td>
<td>출고완료</td>
</tr>
<tr>
<td>OD00000052</td>
<td>P0003</td>
<td>2022-04-27</td>
<td>출고완료</td>
</tr>
<tr>
<td>OD00000053</td>
<td>P0005</td>
<td>2022-05-01</td>
<td>출고완료</td>
</tr>
<tr>
<td>OD00000054</td>
<td>P0006</td>
<td></td>
<td>출고미정</td>
</tr>
<tr>
<td>OD00000055</td>
<td>P0008</td>
<td>2022-05-11</td>
<td>출고대기</td>
</tr>
</tbody>
      </table>

<blockquote>
  <p>출처: 프로그래머스 코딩 테스트 연습, https://programmers.co.kr/learn/challenges</p>
</blockquote>

<hr />

<h2 id="-문제-풀이">🗝 문제 풀이</h2>

<ol>
  <li>DATE_FORMAT을 이용한 날짜의 형태를 변경</li>
  <li>CASE WHEN THEN문을 이용한 날짜에 따른 출고 여부 표시하기</li>
  <li>ORDER_ID 오름차순 정렬</li>
</ol>

<pre><code class="language-roomsql">SELECT ORDER_ID,
    PRODUCT_ID,
    DATE_FORMAT(OUT_DATE,'%Y-%m-%d') AS OUT_DATE,
    CASE WHEN DATE_FORMAT(OUT_DATE,'%Y-%m-%d') &lt;= '2022-05-01' THEN '출고완료'
    WHEN DATE_FORMAT(OUT_DATE,'%Y-%m-%d') &gt; '2022-05-01' THEN '출고대기'
    ELSE '출고미정'
    END AS 출고여부
FROM FOOD_ORDER
ORDER BY ORDER_ID ASC;
</code></pre>

<p><br /></p>]]></content><author><name>LEE JAEHYEOK</name></author><category term="SQL" /><category term="SQL" /><category term="Programmers" /><summary type="html"><![CDATA[📌 문제 : 조건별로 분류하여 주문상태 출력하기]]></summary></entry><entry><title type="html">[Programmers] 즐겨찾기가 가장 많은 식당 정보 출력하기 (MySQL)</title><link href="http://localhost:4000/sql/2023/05/05/sql-favorites.html" rel="alternate" type="text/html" title="[Programmers] 즐겨찾기가 가장 많은 식당 정보 출력하기 (MySQL)" /><published>2023-05-05T00:00:00+09:00</published><updated>2023-05-05T00:00:00+09:00</updated><id>http://localhost:4000/sql/2023/05/05/sql-favorites</id><content type="html" xml:base="http://localhost:4000/sql/2023/05/05/sql-favorites.html"><![CDATA[<h2 id="-문제--즐겨찾기가-가장-많은-식당-정보-출력하기">📌 문제 : <a href="https://school.programmers.co.kr/learn/courses/30/lessons/131123">즐겨찾기가 가장 많은 식당 정보 출력하기</a></h2>

<h3 id="-문제-설명">📖 문제 설명</h3>

<p>다음은 식당의 정보를 담은 <code>REST_INFO</code> 테이블입니다. <code>REST_INFO</code> 테이블은 다음과 같으며 <code>REST_ID</code>, <code>REST_NAME</code>, <code>FOOD_TYPE</code>, <code>VIEWS</code>, <code>FAVORITES</code>, <code>PARKING_LOT</code>, <code>ADDRESS</code>, <code>TEL</code>은 식당 ID, 식당 이름, 음식 종류, 조회수, 즐겨찾기수, 주차장 유무, 주소, 전화번호를 의미합니다.</p>
<table class="table">
        <thead><tr>
<th>Column name</th>
<th>Type</th>
<th>Nullable</th>
</tr>
</thead>
        <tbody><tr>
<td>REST_ID</td>
<td>VARCHAR(5)</td>
<td>FALSE</td>
</tr>
<tr>
<td>REST_NAME</td>
<td>VARCHAR(50)</td>
<td>FALSE</td>
</tr>
<tr>
<td>FOOD_TYPE</td>
<td>VARCHAR(20)</td>
<td>TRUE</td>
</tr>
<tr>
<td>VIEWS</td>
<td>NUMBER</td>
<td>TRUE</td>
</tr>
<tr>
<td>FAVORITES</td>
<td>NUMBER</td>
<td>TRUE</td>
</tr>
<tr>
<td>PARKING_LOT</td>
<td>VARCHAR(1)</td>
<td>TRUE</td>
</tr>
<tr>
<td>ADDRESS</td>
<td>VARCHAR(100)</td>
<td>TRUE</td>
</tr>
<tr>
<td>TEL</td>
<td>VARCHAR(100)</td>
<td>TRUE</td>
</tr>
</tbody>
      </table>
<hr />

<h5>문제</h5>

<p><code>REST_INFO</code> 테이블에서 음식종류별로 즐겨찾기수가 가장 많은 식당의 음식 종류, ID, 식당 이름, 즐겨찾기수를 조회하는 SQL문을 작성해주세요. 이때 결과는 음식 종류를 기준으로 내림차순 정렬해주세요.</p>

<hr />

<h5>예시</h5>

<p><code>REST_INFO</code> 테이블이 다음과 같을 때</p>
<table class="table">
        <thead><tr>
<th>REST_ID</th>
<th>REST_NAME</th>
<th>FOOD_TYPE</th>
<th>VIEWS</th>
<th>FAVORITES</th>
<th>PARKING_LOT</th>
<th>ADDRESS</th>
<th>TEL</th>
</tr>
</thead>
        <tbody><tr>
<td>00001</td>
<td>은돼지식당</td>
<td>한식</td>
<td>1150345</td>
<td>734</td>
<td>N</td>
<td>서울특별시 중구 다산로 149</td>
<td>010-4484-8751</td>
</tr>
<tr>
<td>00002</td>
<td>하이가쯔네</td>
<td>일식</td>
<td>120034</td>
<td>112</td>
<td>N</td>
<td>서울시 중구 신당동 375-21</td>
<td>NULL</td>
</tr>
<tr>
<td>00003</td>
<td>따띠따띠뜨</td>
<td>양식</td>
<td>1234023</td>
<td>102</td>
<td>N</td>
<td>서울시 강남구 신사동 627-3 1F</td>
<td>02-6397-1023</td>
</tr>
<tr>
<td>00004</td>
<td>스시사카우스</td>
<td>일식</td>
<td>1522074</td>
<td>230</td>
<td>N</td>
<td>서울시 서울시 강남구 신사동 627-27</td>
<td>010-9394-2554</td>
</tr>
<tr>
<td>00005</td>
<td>코슌스</td>
<td>일식</td>
<td>15301</td>
<td>123</td>
<td>N</td>
<td>서울특별시 강남구 언주로153길</td>
<td>010-1315-8729</td>
</tr>
</tbody>
      </table>
<p>SQL을 실행하면 다음과 같이 출력되어야 합니다.</p>
<table class="table">
        <thead><tr>
<th>FOOD_TYPE</th>
<th>REST_ID</th>
<th>REST_NAME</th>
<th>FAVORITES</th>
</tr>
</thead>
        <tbody><tr>
<td>한식</td>
<td>00001</td>
<td>은돼지식당</td>
<td>734</td>
</tr>
<tr>
<td>일식</td>
<td>00004</td>
<td>스시사카우스</td>
<td>230</td>
</tr>
<tr>
<td>양식</td>
<td>00003</td>
<td>따띠따띠뜨</td>
<td>102</td>
</tr>
</tbody>
      </table>

<blockquote>
  <p>출처: 프로그래머스 코딩 테스트 연습, https://programmers.co.kr/learn/challenges</p>
</blockquote>

<hr />

<h2 id="-문제-풀이">🗝 문제 풀이</h2>

<ol>
  <li>가장 많은 즐겨찾기를 받은 음식종류를 찾기위해 SUB쿼리를 이용</li>
  <li>음식종류로 GROUP BY</li>
  <li>음식종류로 내림차순 진행</li>
</ol>

<pre><code class="language-roomsql">SELECT FOOD_TYPE,
    REST_ID,
    REST_NAME,
    FAVORITES
FROM REST_INFO
WHERE FAVORITES IN (SELECT MAX(FAVORITES)
                    FROM REST_INFO
                    GROUP BY FOOD_TYPE)
GROUP BY FOOD_TYPE
ORDER BY FOOD_TYPE DESC;
</code></pre>

<p>여기서 조금 헷갈려하는 부분이 있어 참고차 적어본다. <br />
우선 위에 코드에서는 즐겨찾기 수량을 SUB쿼리를 이용해 <br />
최대값을 가진 음식종류의 행과 일치하는 즐겨찾기를 찾는 방법이다.</p>

<p><br /></p>

<p>아래와 같은 방식으로 푼 사람도 있을 것 같다.</p>

<p><strong>오답</strong></p>

<pre><code class="language-roomsql">SELECT FOOD_TYPE, 
    REST_ID, 
    REST_NAME, 
    MAX(FAVORITES) 
FROM REST_INFO
GROUP BY FOOD_TYPE
ORDER BY FOOD_TYPE DESC
</code></pre>
<p>위의 코드를 실행하면 결과는 동일하게 나오는 것 처럼 보일 것이다. <br />
해당처럼 실행하면 각 그룹의 FAVORITES 최댓값을 가져온다. <br />
하지만 행(튜플) 전체를 가져오진 않아서 첫 번째 행에 각 그룹의 <br />
FAVORITES 최댓값만 덮어써진 형태이게된다.</p>

<p><br /></p>]]></content><author><name>LEE JAEHYEOK</name></author><category term="SQL" /><category term="SQL" /><category term="Programmers" /><summary type="html"><![CDATA[📌 문제 : 즐겨찾기가 가장 많은 식당 정보 출력하기]]></summary></entry><entry><title type="html">[Programmers] 카테고리 별 도서 판매량 집계하기 (MySQL)</title><link href="http://localhost:4000/sql/2023/05/04/sql-categorybook.html" rel="alternate" type="text/html" title="[Programmers] 카테고리 별 도서 판매량 집계하기 (MySQL)" /><published>2023-05-04T00:00:00+09:00</published><updated>2023-05-04T00:00:00+09:00</updated><id>http://localhost:4000/sql/2023/05/04/sql-categorybook</id><content type="html" xml:base="http://localhost:4000/sql/2023/05/04/sql-categorybook.html"><![CDATA[<h2 id="-문제--카테고리-별-도서-판매량-집계하기">📌 문제 : <a href="https://school.programmers.co.kr/learn/courses/30/lessons/144855">카테고리 별 도서 판매량 집계하기</a></h2>

<h3 id="-문제-설명">📖 문제 설명</h3>

<p>다음은 어느 한 서점에서 판매중인 도서들의 도서 정보(<code>BOOK</code>), 판매 정보(<code>BOOK_SALES</code>) 테이블입니다.</p>

<p><code>BOOK</code> 테이블은 각 도서의 정보를 담은 테이블로 아래와 같은 구조로 되어있습니다.</p>
<table class="table">
        <thead><tr>
<th>Column name</th>
<th>Type</th>
<th>Nullable</th>
<th>Description</th>
</tr>
</thead>
        <tbody><tr>
<td>BOOK_ID</td>
<td>INTEGER</td>
<td>FALSE</td>
<td>도서 ID</td>
</tr>
<tr>
<td>CATEGORY</td>
<td>VARCHAR(N)</td>
<td>FALSE</td>
<td>카테고리 (경제, 인문, 소설, 생활, 기술)</td>
</tr>
<tr>
<td>AUTHOR_ID</td>
<td>INTEGER</td>
<td>FALSE</td>
<td>저자 ID</td>
</tr>
<tr>
<td>PRICE</td>
<td>INTEGER</td>
<td>FALSE</td>
<td>판매가 (원)</td>
</tr>
<tr>
<td>PUBLISHED_DATE</td>
<td>DATE</td>
<td>FALSE</td>
<td>출판일</td>
</tr>
</tbody>
      </table>
<p><code>BOOK_SALES</code> 테이블은 각 도서의 날짜 별 판매량 정보를 담은 테이블로 아래와 같은 구조로 되어있습니다.</p>
<table class="table">
        <thead><tr>
<th>Column name</th>
<th>Type</th>
<th>Nullable</th>
<th>Description</th>
</tr>
</thead>
        <tbody><tr>
<td>BOOK_ID</td>
<td>INTEGER</td>
<td>FALSE</td>
<td>도서 ID</td>
</tr>
<tr>
<td>SALES_DATE</td>
<td>DATE</td>
<td>FALSE</td>
<td>판매일</td>
</tr>
<tr>
<td>SALES</td>
<td>INTEGER</td>
<td>FALSE</td>
<td>판매량</td>
</tr>
</tbody>
      </table>
<hr />

<h5>문제</h5>

<p><code>2022년 1월</code>의 카테고리 별 도서 판매량을 합산하고, 카테고리(<code>CATEGORY</code>), 총 판매량(<code>TOTAL_SALES</code>) 리스트를 출력하는 SQL문을 작성해주세요. <br />
결과는 카테고리명을 기준으로 오름차순 정렬해주세요.</p>

<hr />

<h5>예시</h5>

<p>예를 들어 <code>BOOK</code> 테이블과 <code>BOOK_SALES</code> 테이블이 다음과 같다면</p>
<table class="table">
        <thead><tr>
<th>BOOK_ID</th>
<th>CATEGORY</th>
<th>AUTHOR_ID</th>
<th>PRICE</th>
<th>PUBLISHED_DATE</th>
</tr>
</thead>
        <tbody><tr>
<td>1</td>
<td>인문</td>
<td>1</td>
<td>10000</td>
<td>2020-01-01</td>
</tr>
<tr>
<td>2</td>
<td>경제</td>
<td>1</td>
<td>9000</td>
<td>2021-02-05</td>
</tr>
<tr>
<td>3</td>
<td>경제</td>
<td>2</td>
<td>9000</td>
<td>2021-03-11</td>
</tr>
</tbody>
      </table>
<table class="table">
        <thead><tr>
<th>BOOK_ID</th>
<th>SALES_DATE</th>
<th>SALES</th>
</tr>
</thead>
        <tbody><tr>
<td>1</td>
<td>2022-01-01</td>
<td>2</td>
</tr>
<tr>
<td>2</td>
<td>2022-01-02</td>
<td>3</td>
</tr>
<tr>
<td>1</td>
<td>2022-01-05</td>
<td>1</td>
</tr>
<tr>
<td>2</td>
<td>2022-01-20</td>
<td>5</td>
</tr>
<tr>
<td>2</td>
<td>2022-01-21</td>
<td>6</td>
</tr>
<tr>
<td>3</td>
<td>2022-01-22</td>
<td>2</td>
</tr>
<tr>
<td>2</td>
<td>2022-02-11</td>
<td>3</td>
</tr>
</tbody>
      </table>
<p>2022년 1월의 도서 별 총 판매량은 도서 ID 가 1 인 도서가 총 3권, 도서 ID 가 2 인 도서가 총 14권 이고, 도서 ID 가 3 인 도서가 총 2권 입니다.</p>

<p>카테고리 별로 판매량을 집계한 결과는 다음과 같습니다.</p>
<table class="table">
        <thead><tr>
<th>CATEGORY</th>
<th>TOTAL_SALES</th>
</tr>
</thead>
        <tbody><tr>
<td>인문</td>
<td>3</td>
</tr>
<tr>
<td>경제</td>
<td>16</td>
</tr>
</tbody>
      </table>
<p>카테고리명을 오름차순으로 정렬하면 다음과 같이 나와야 합니다.</p>
<table class="table">
        <thead><tr>
<th>CATEGORY</th>
<th>TOTAL_SALES</th>
</tr>
</thead>
        <tbody><tr>
<td>경제</td>
<td>16</td>
</tr>
<tr>
<td>인문</td>
<td>3</td>
</tr>
</tbody>
      </table>

<blockquote>
  <p>출처: 프로그래머스 코딩 테스트 연습, https://programmers.co.kr/learn/challenges</p>
</blockquote>

<hr />

<h2 id="-문제-풀이">🗝 문제 풀이</h2>

<ol>
  <li>판매된 수량을 집계해야하므로 SALES의 수량을 SUM() 함수를 이용해 총합을 더해줘야한다. COUNT와 헷갈리면 안된다.</li>
  <li>BOOK_SALES 기준으로 LEFT JOIN을 하여 테이블을 합쳐준다.</li>
  <li>GROUP BY를 카테고리 기준으로 진행한다.</li>
  <li>WHERE절을 이용해 판매일이 2022-01에 해당하는 데이터만 필터링한다.</li>
</ol>

<pre><code class="language-roomsql">SELECT 
    b.CATEGORY,
    SUM(s.SALES) AS TOTAL_SALES
FROM BOOK_SALES s
LEFT JOIN BOOK b
ON s.BOOK_ID = b.BOOK_ID
WHERE SALES_DATE LIKE '2022-01%'
GROUP BY b.CATEGORY
ORDER BY b.CATEGORY ASC;
</code></pre>

<p><br /></p>]]></content><author><name>LEE JAEHYEOK</name></author><category term="SQL" /><category term="SQL" /><category term="Programmers" /><summary type="html"><![CDATA[📌 문제 : 카테고리 별 도서 판매량 집계하기]]></summary></entry></feed>